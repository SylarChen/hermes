/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.hermes.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Message extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Message\",\"namespace\":\"com.ctrip.hermes.avro\",\"fields\":[{\"name\":\"topic\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"partition\",\"type\":\"string\"},{\"name\":\"bornTime\",\"type\":\"long\"},{\"name\":\"priority\",\"type\":\"boolean\"},{\"name\":\"body\",\"type\":\"bytes\"},{\"name\":\"properties\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence topic;
  @Deprecated public java.lang.CharSequence key;
  @Deprecated public java.lang.CharSequence partition;
  @Deprecated public long bornTime;
  @Deprecated public boolean priority;
  @Deprecated public java.nio.ByteBuffer body;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Message() {}

  /**
   * All-args constructor.
   */
  public Message(java.lang.CharSequence topic, java.lang.CharSequence key, java.lang.CharSequence partition, java.lang.Long bornTime, java.lang.Boolean priority, java.nio.ByteBuffer body, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties) {
    this.topic = topic;
    this.key = key;
    this.partition = partition;
    this.bornTime = bornTime;
    this.priority = priority;
    this.body = body;
    this.properties = properties;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return topic;
    case 1: return key;
    case 2: return partition;
    case 3: return bornTime;
    case 4: return priority;
    case 5: return body;
    case 6: return properties;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: topic = (java.lang.CharSequence)value$; break;
    case 1: key = (java.lang.CharSequence)value$; break;
    case 2: partition = (java.lang.CharSequence)value$; break;
    case 3: bornTime = (java.lang.Long)value$; break;
    case 4: priority = (java.lang.Boolean)value$; break;
    case 5: body = (java.nio.ByteBuffer)value$; break;
    case 6: properties = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'topic' field.
   */
  public java.lang.CharSequence getTopic() {
    return topic;
  }

  /**
   * Sets the value of the 'topic' field.
   * @param value the value to set.
   */
  public void setTopic(java.lang.CharSequence value) {
    this.topic = value;
  }

  /**
   * Gets the value of the 'key' field.
   */
  public java.lang.CharSequence getKey() {
    return key;
  }

  /**
   * Sets the value of the 'key' field.
   * @param value the value to set.
   */
  public void setKey(java.lang.CharSequence value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'partition' field.
   */
  public java.lang.CharSequence getPartition() {
    return partition;
  }

  /**
   * Sets the value of the 'partition' field.
   * @param value the value to set.
   */
  public void setPartition(java.lang.CharSequence value) {
    this.partition = value;
  }

  /**
   * Gets the value of the 'bornTime' field.
   */
  public java.lang.Long getBornTime() {
    return bornTime;
  }

  /**
   * Sets the value of the 'bornTime' field.
   * @param value the value to set.
   */
  public void setBornTime(java.lang.Long value) {
    this.bornTime = value;
  }

  /**
   * Gets the value of the 'priority' field.
   */
  public java.lang.Boolean getPriority() {
    return priority;
  }

  /**
   * Sets the value of the 'priority' field.
   * @param value the value to set.
   */
  public void setPriority(java.lang.Boolean value) {
    this.priority = value;
  }

  /**
   * Gets the value of the 'body' field.
   */
  public java.nio.ByteBuffer getBody() {
    return body;
  }

  /**
   * Sets the value of the 'body' field.
   * @param value the value to set.
   */
  public void setBody(java.nio.ByteBuffer value) {
    this.body = value;
  }

  /**
   * Gets the value of the 'properties' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.properties = value;
  }

  /** Creates a new Message RecordBuilder */
  public static com.ctrip.hermes.avro.Message.Builder newBuilder() {
    return new com.ctrip.hermes.avro.Message.Builder();
  }
  
  /** Creates a new Message RecordBuilder by copying an existing Builder */
  public static com.ctrip.hermes.avro.Message.Builder newBuilder(com.ctrip.hermes.avro.Message.Builder other) {
    return new com.ctrip.hermes.avro.Message.Builder(other);
  }
  
  /** Creates a new Message RecordBuilder by copying an existing Message instance */
  public static com.ctrip.hermes.avro.Message.Builder newBuilder(com.ctrip.hermes.avro.Message other) {
    return new com.ctrip.hermes.avro.Message.Builder(other);
  }
  
  /**
   * RecordBuilder for Message instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Message>
    implements org.apache.avro.data.RecordBuilder<Message> {

    private java.lang.CharSequence topic;
    private java.lang.CharSequence key;
    private java.lang.CharSequence partition;
    private long bornTime;
    private boolean priority;
    private java.nio.ByteBuffer body;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties;

    /** Creates a new Builder */
    private Builder() {
      super(com.ctrip.hermes.avro.Message.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.ctrip.hermes.avro.Message.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.topic)) {
        this.topic = data().deepCopy(fields()[0].schema(), other.topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.key)) {
        this.key = data().deepCopy(fields()[1].schema(), other.key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partition)) {
        this.partition = data().deepCopy(fields()[2].schema(), other.partition);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.bornTime)) {
        this.bornTime = data().deepCopy(fields()[3].schema(), other.bornTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.priority)) {
        this.priority = data().deepCopy(fields()[4].schema(), other.priority);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.body)) {
        this.body = data().deepCopy(fields()[5].schema(), other.body);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.properties)) {
        this.properties = data().deepCopy(fields()[6].schema(), other.properties);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Message instance */
    private Builder(com.ctrip.hermes.avro.Message other) {
            super(com.ctrip.hermes.avro.Message.SCHEMA$);
      if (isValidValue(fields()[0], other.topic)) {
        this.topic = data().deepCopy(fields()[0].schema(), other.topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.key)) {
        this.key = data().deepCopy(fields()[1].schema(), other.key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partition)) {
        this.partition = data().deepCopy(fields()[2].schema(), other.partition);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.bornTime)) {
        this.bornTime = data().deepCopy(fields()[3].schema(), other.bornTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.priority)) {
        this.priority = data().deepCopy(fields()[4].schema(), other.priority);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.body)) {
        this.body = data().deepCopy(fields()[5].schema(), other.body);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.properties)) {
        this.properties = data().deepCopy(fields()[6].schema(), other.properties);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'topic' field */
    public java.lang.CharSequence getTopic() {
      return topic;
    }
    
    /** Sets the value of the 'topic' field */
    public com.ctrip.hermes.avro.Message.Builder setTopic(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.topic = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'topic' field has been set */
    public boolean hasTopic() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'topic' field */
    public com.ctrip.hermes.avro.Message.Builder clearTopic() {
      topic = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'key' field */
    public java.lang.CharSequence getKey() {
      return key;
    }
    
    /** Sets the value of the 'key' field */
    public com.ctrip.hermes.avro.Message.Builder setKey(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.key = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'key' field has been set */
    public boolean hasKey() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'key' field */
    public com.ctrip.hermes.avro.Message.Builder clearKey() {
      key = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'partition' field */
    public java.lang.CharSequence getPartition() {
      return partition;
    }
    
    /** Sets the value of the 'partition' field */
    public com.ctrip.hermes.avro.Message.Builder setPartition(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.partition = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'partition' field has been set */
    public boolean hasPartition() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'partition' field */
    public com.ctrip.hermes.avro.Message.Builder clearPartition() {
      partition = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'bornTime' field */
    public java.lang.Long getBornTime() {
      return bornTime;
    }
    
    /** Sets the value of the 'bornTime' field */
    public com.ctrip.hermes.avro.Message.Builder setBornTime(long value) {
      validate(fields()[3], value);
      this.bornTime = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'bornTime' field has been set */
    public boolean hasBornTime() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'bornTime' field */
    public com.ctrip.hermes.avro.Message.Builder clearBornTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'priority' field */
    public java.lang.Boolean getPriority() {
      return priority;
    }
    
    /** Sets the value of the 'priority' field */
    public com.ctrip.hermes.avro.Message.Builder setPriority(boolean value) {
      validate(fields()[4], value);
      this.priority = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'priority' field has been set */
    public boolean hasPriority() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'priority' field */
    public com.ctrip.hermes.avro.Message.Builder clearPriority() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'body' field */
    public java.nio.ByteBuffer getBody() {
      return body;
    }
    
    /** Sets the value of the 'body' field */
    public com.ctrip.hermes.avro.Message.Builder setBody(java.nio.ByteBuffer value) {
      validate(fields()[5], value);
      this.body = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'body' field has been set */
    public boolean hasBody() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'body' field */
    public com.ctrip.hermes.avro.Message.Builder clearBody() {
      body = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'properties' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProperties() {
      return properties;
    }
    
    /** Sets the value of the 'properties' field */
    public com.ctrip.hermes.avro.Message.Builder setProperties(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[6], value);
      this.properties = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'properties' field has been set */
    public boolean hasProperties() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'properties' field */
    public com.ctrip.hermes.avro.Message.Builder clearProperties() {
      properties = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Message build() {
      try {
        Message record = new Message();
        record.topic = fieldSetFlags()[0] ? this.topic : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.key = fieldSetFlags()[1] ? this.key : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.partition = fieldSetFlags()[2] ? this.partition : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.bornTime = fieldSetFlags()[3] ? this.bornTime : (java.lang.Long) defaultValue(fields()[3]);
        record.priority = fieldSetFlags()[4] ? this.priority : (java.lang.Boolean) defaultValue(fields()[4]);
        record.body = fieldSetFlags()[5] ? this.body : (java.nio.ByteBuffer) defaultValue(fields()[5]);
        record.properties = fieldSetFlags()[6] ? this.properties : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
